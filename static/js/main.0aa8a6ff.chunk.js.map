{"version":3,"sources":["components/Form.js","components/CommentsList.js","App.js","actions/actions.js","reducers/formReducer.js","reducers/commentsReducer.js","reducers/rootReducer.js","store/store.js","index.js"],"names":["Form","props","handleAuthor","handleComment","addComment","validateInput","str","match","className","name","onSubmit","e","preventDefault","authorVal","author","trim","commentVal","comment","alert","validateComment","id","Date","toString","date","getDate","getMonth","slice","getFullYear","time","toLocaleTimeString","navigator","language","hour","minute","second","document","querySelector","value","type","placeholder","onChange","CommentsList","commentList","deleteComment","comments","length","map","key","title","onClick","connect","store","form","dispatch","newValue","target","getComment","initState","initialState","rootReducer","combineReducers","state","action","updateList","filter","persistedState","localStorage","getItem","JSON","parse","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","setItem","stringify","getState","app","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.0aa8a6ff.chunk.js","sourcesContent":["import React from 'react'\n\nconst Form = props => {\n\tconst { handleAuthor, handleComment, addComment } = props\n\n\tconst getDateComment = () => {\n\t\tconst date = new Date().getDate() + '.' + ('0' + (new Date().getMonth() + 1)).slice(-2) + '.' + new Date().getFullYear()\n\t\treturn date\n\t}\n\n\tconst getTimeComment = () => {\n\t\tconst time = new Date().toLocaleTimeString(navigator.language, {hour: '2-digit', minute:'2-digit', second:'2-digit'})\n\t\treturn time\n\t}\n\n\tconst validateInput = str => {\n\t\tif (str.match(/<([^>]+?)([^>]*?)>(.*?)<\\/\\1>/gi)) {\n\t\t\treturn false\n\t\t}\n\t\t\treturn true\n\t}\n\n\tconst validateComment = e => {\n\t\te.preventDefault()\n\t\tconst authorVal = props.author.trim()\n\t\tconst commentVal = props.comment.trim()\n\n\t\tif (authorVal && commentVal) {\n\t\t\tif (validateInput(props.author) && validateInput(props.comment)) {\n\t\t\t\treturn true\n\t\t\t} else {\n\t\t\t\talert('Not correct value of the fields')\n\t\t\t}\n\t\t} else {\n\t\t\talert('No content. Fields should not be empty')\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className='add__comment'>\n\t\t\t<form\n\t\t\t\tclassName='form'\n\t\t\t\tname='comments'\n\t\t\t\tonSubmit={e => {\n\t\t\t\t\tif (validateComment(e)) {\n\t\t\t\t\t\taddComment({\n\t\t\t\t\t\t\tid: `${(+new Date()).toString(16)}`,\n\t\t\t\t\t\t\tauthor: props.author,\n\t\t\t\t\t\t\tcomment: props.comment,\n\t\t\t\t\t\t\tdate: getDateComment(),\n\t\t\t\t\t\t\ttime: getTimeComment(),\n\t\t\t\t\t\t})\n\t\t\t\t\t\tdocument.querySelector('.form__input').value='';\n                        document.querySelector('.form__textinput').value='';\n\t\t\t\t\t} \n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<fieldset className='form__field'>\n\t\t\t\t\t<legend className='form__title'>Add a new comment</legend>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName='form__input'\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tname='author'\n\t\t\t\t\t\tplaceholder=\"Author's name\"\n\t\t\t\t\t\tonChange={e => {\n\t\t\t\t\t\t\thandleAuthor(e)\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tclassName='form__textinput'\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tname='text'\n\t\t\t\t\t\tplaceholder='Your comment here'\n\t\t\t\t\t\tonChange={e => {\n\t\t\t\t\t\t\thandleComment(e)\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<button className='form__btn' type='submit'>Add</button>\n\t\t\t\t</fieldset>\n\t\t\t</form>\n\t\t</div>\n\t)\n}\n\nexport default Form\n","import React from 'react'\n\nconst CommentsList = ({ commentList, deleteComment }) => {\n\tlet noComments\n\n\tif (commentList.comments.length) {\n\t\tnoComments = commentList.comments.map(comment => {\n\t\t\treturn (\n\t\t\t\t<li className='comment__item' key={comment.id}>\n\t\t\t\t\t<p className='comment__author'>{comment.author}</p>\n\t\t\t\t\t<p className='comment__text'>{comment.comment}</p>\n\t\t\t\t\t<div className='comment__details'>\n\t\t\t\t\t\t<p className='details__data'>{comment.date} {comment.time}</p>\n\t\t\t\t\t\t<button \n\t\t\t\t\t\t\tclassName='details__btn'\n\t\t\t\t\t\t\ttitle='delete'\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tdeleteComment(comment.id)\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>delete</button>\n\t\t\t\t\t</div>\n\t\t\t\t</li>\n\t\t\t)\n\t\t})\n\t\t} else {\n\t\t\tnoComments = <p className='form__title'>No comments left</p>\n\t}\n\n\treturn noComments\n}\n\nexport default CommentsList\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport Form from './components/Form'\nimport CommentsList from './components/CommentsList'\nimport { addComment, getComment, deleteComment, handleAuthor, handleComment } from './actions/actions'\n\nconst App = ({ form, handleAuthor, handleComment, addComment, deleteComment, comments }) => {\n\treturn (\n\t\t<div className='wrapper'>\n\t\t\t<header>\n\t\t\t\t<h1 className='title'>Comments</h1>\n\t\t\t</header>\n\t\t\t<main>\n\t\t\t\t<Form\n\t\t\t\t\tauthor={form.author}\n\t\t\t\t\tcomment={form.comment}\n\t\t\t\t\thandleAuthor={handleAuthor}\n\t\t\t\t\thandleComment={handleComment}\n\t\t\t\t\taddComment={addComment}\n\t\t\t\t\tdeleteComment={deleteComment}\n\t\t\t\t/>\n\t\t\t\t<ul className='comment__list'>\n\t\t\t\t\t<CommentsList \n\t\t\t\t\t\tcommentList={comments} \n\t\t\t\t\t\tdeleteComment={deleteComment} \n\t\t\t\t\t/>\n\t\t\t\t</ul>\n\t\t\t</main>\n\t\t</div>\n\t)\n}\n\nconst mapStateToProps = store => {\n\treturn {\n\t\tform: store.form,\n\t\tcomments: store.comments,\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\thandleAuthor: e => dispatch(handleAuthor(e)),\n\t\thandleComment: e => dispatch(handleComment(e)),\n\t\taddComment: comment => dispatch(addComment(comment)),\n\t\tdeleteComment: id => dispatch(deleteComment(id)),\n\t\tgetComment: () => dispatch(getComment())\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","export function addComment(comment) {\n\treturn {\n\t\ttype: 'ADD_COMMENT',\n\t\tcomment,\n\t}\n}\nexport function getComment() {\n\treturn {\n\t\ttype: 'GET_COMMENT'\n\t}\n}\nexport function deleteComment(id) {\n\treturn {\n\t\ttype: 'DELETE_COMMENT',\n\t\tid,\n\t}\n}\n\nexport function handleAuthor(e) {\n\tconst newValue = e.target.value\n\treturn {\n\t\ttype: 'CHANGE_AUTHOR',\n\t\tnewValue,\n\t}\n}\n\nexport function handleComment(e) {\n\tconst newValue = e.target.value\n\treturn {\n\t\ttype: 'CHANGE_COMMENT',\n\t\tnewValue,\n\t}\n}","const initState = {\n\tauthor: '',\n\tcomment: '',\n}\n\nexport function formReducer(state = initState, action) {\n\tswitch (action.type) {\n\t\tcase 'CHANGE_AUTHOR':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tauthor: action.newValue,\n\t\t\t}\n\t\tcase 'CHANGE_COMMENT':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcomment: action.newValue,\n\t\t\t}\n\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n","const initialState = {\n\tcomments: [\n\t\t{id: 1, author: 'Natalia Agzamova', comment: 'Hello world', date: '16.07.2022', time: '9:00:00'},\n\t\t{id: 2, author: 'Vlad Ivanov', comment: 'Hello there', date: '18.07.2022', time: '9:00:10'},\n\t\t{id: 3, author: 'Maksim Petrov', comment: 'Hello people', date: '26.07.2022', time: '10:00:20'},\n\t],\n}\n\nexport function commentsReducer(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase 'GET_COMMENTS':\n\t\t\treturn state\n\t\tcase 'ADD_COMMENT':\n\t\t\treturn { ...state, comments: [action.comment, ...state.comments] }\n\t\tcase 'DELETE_COMMENT':\n\t\t\tconst updateList = {\n\t\t\t\tcomments: state.comments.filter(comment => comment.id !== action.id)\n\t\t\t}\n\t\t\treturn updateList\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n","import { combineReducers } from 'redux'\nimport { formReducer } from './formReducer'\nimport { commentsReducer } from './commentsReducer'\n\nexport const rootReducer = combineReducers({\n\tform: formReducer,\n\tcomments: commentsReducer,\n})","import { createStore } from 'redux'\nimport { rootReducer } from '../reducers/rootReducer'\n\nconst persistedState = localStorage.getItem('reduxState') ?\n\tJSON.parse(localStorage.getItem('reduxState')) :\n\t{}\n\nexport const store = createStore(\n\trootReducer,\n\tpersistedState,\n\twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n\nstore.subscribe(() => {\n\tlocalStorage.setItem('reduxState', JSON.stringify(store.getState()))\n})\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './style.css'\nimport store from './store/store'\nimport { Provider } from 'react-redux'\n\nconst app = (\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'))"],"sourceRoot":""}